name: Frontend - Build, Push & Deploy (CI/CD)

on:
    push:
        branches: ["main"]
    workflow_dispatch:

jobs:
    build-test-push-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 22

            - name: Install dependencies
              run: |
                  npm install

            - name: Build Angular app
              run: |
                  npm run build --omit=dev --if-present

            - name: Build Docker image
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:latest .
                  docker tag ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:latest ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:${{ github.sha }}

            - name: Docker Login
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Push Docker image
              run: |
                  docker push ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:${{ github.sha }}

            # ðŸš€ Deploy to Test Server
            - name: Deploy to Test Server via SSH
              if: github.ref == 'refs/heads/main'
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.TEST_SERVER_IP }}
                  username: ${{ secrets.TEST_SERVER_USER }}
                  key: ${{ secrets.TEST_SERVER_SSH_KEY }}
                  script: |
                      docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
                      docker pull ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:latest
                      docker stop github-ci-frontend || true
                      docker rm github-ci-frontend || true
                      docker run -d -p 80:80 --name github-ci-frontend ${{ secrets.DOCKER_USERNAME }}/github-ci-frontend:latest

            - name: Success
              run: echo "Frontend deployed successfully to test server!"
